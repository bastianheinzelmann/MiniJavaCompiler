_Lmain(2) {
 MOVE(TEMP(t79), CALL(NAME(_L_halloc), CONST(0)))
 MOVE(TEMP(t80), CALL(NAME(_LPiDigits$pi), TEMP(t79)))
 MOVE(TEMP(t1), CALL(NAME(_L_write), TEMP(t80)))
 MOVE(TEMP(t0), CONST(0))
 return t0
}

_LPiDigits$base(1) {
 MOVE(TEMP(t2), CONST(1000))
 return t2
}

_LPiDigits$places(1) {
 MOVE(TEMP(t3), CONST(40))
 return t3
}

_LPiDigits$reserve(1) {
 MOVE(TEMP(t4), CONST(5))
 return t4
}

_LPiDigits$equals(3) {
 MOVE(TEMP(t8), CONST(0))
 CJUMP(LT, PARAM(1), PARAM(2), L$$3, L$$4)
 LABEL(L$$3)
 MOVE(TEMP(t8), CONST(1))
 LABEL(L$$4)
 CJUMP(EQ, BINOP(MINUS, CONST(1), TEMP(t8)), CONST(1), L$$0, L$$1)
 LABEL(L$$0)
 MOVE(TEMP(t9), CONST(0))
 CJUMP(LT, PARAM(2), PARAM(1), L$$5, L$$6)
 LABEL(L$$5)
 MOVE(TEMP(t9), CONST(1))
 LABEL(L$$6)
 MOVE(TEMP(t7), BINOP(MINUS, CONST(1), TEMP(t9)))
 MOVE(TEMP(t6), CONST(1))
 JUMP(NAME(L$$2), L$$2)
 LABEL(L$$1)
 MOVE(TEMP(t7), CONST(0))
 MOVE(TEMP(t6), CONST(0))
 LABEL(L$$2)
 MOVE(TEMP(t5), BINOP(AND, TEMP(t6), TEMP(t7)))
 return t5
}

_LPiDigits$mod(3) {
 MOVE(TEMP(t10), BINOP(MINUS, PARAM(1), BINOP(MUL, PARAM(2), BINOP(DIV, PARAM(1), PARAM(2)))))
 return t10
}

_LPiDigits$div(3) {
 MOVE(TEMP(t81), CALL(NAME(_LPiDigits$equals), PARAM(0), PARAM(2), CONST(0)))
 CJUMP(EQ, TEMP(t81), CONST(1), L$$8, L$$7)
 LABEL(L$$8)
 MOVE(TEMP(t11), CONST(0))
 JUMP(NAME(L$$9), L$$9)
 LABEL(L$$7)
 MOVE(TEMP(t11), CONST(0))
 LABEL(L$$10)
 MOVE(TEMP(t12), CONST(0))
 CJUMP(LT, CONST(0), BINOP(PLUS, BINOP(MINUS, PARAM(1), PARAM(2)), CONST(1)), L$$13, L$$14)
 LABEL(L$$13)
 MOVE(TEMP(t12), CONST(1))
 LABEL(L$$14)
 CJUMP(EQ, TEMP(t12), CONST(1), L$$12, L$$11)
 LABEL(L$$12)
 MOVE(TEMP(t11), BINOP(PLUS, TEMP(t11), CONST(1)))
 MOVE(PARAM(1), BINOP(MINUS, PARAM(1), PARAM(2)))
 JUMP(NAME(L$$10), L$$10)
 LABEL(L$$11)
 LABEL(L$$9)
 MOVE(TEMP(t13), TEMP(t11))
 return t13
}

_LPiDigits$shownum(2) {
 MOVE(TEMP(t14), CONST(0))
 LABEL(L$$15)
 MOVE(TEMP(t15), CONST(0))
 MOVE(TEMP(t85), TEMP(t14))
 MOVE(TEMP(t82), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(TEMP(t84), TEMP(t82))
 MOVE(TEMP(t83), CALL(NAME(_LPiDigits$reserve), PARAM(0)))
 CJUMP(LT, TEMP(t85), BINOP(MINUS, TEMP(t84), TEMP(t83)), L$$18, L$$19)
 LABEL(L$$18)
 MOVE(TEMP(t15), CONST(1))
 LABEL(L$$19)
 CJUMP(EQ, TEMP(t15), CONST(1), L$$17, L$$16)
 LABEL(L$$17)
 MOVE(TEMP(t16), CALL(NAME(_L_write), BINOP(PLUS, CONST(48), BINOP(DIV, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t14), CONST(1))))), CONST(100)))))
 MOVE(TEMP(t86), CALL(NAME(_LPiDigits$mod), PARAM(0), BINOP(DIV, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t14), CONST(1))))), CONST(10)), CONST(10)))
 MOVE(TEMP(t17), CALL(NAME(_L_write), BINOP(PLUS, CONST(48), TEMP(t86))))
 MOVE(TEMP(t87), CALL(NAME(_LPiDigits$mod), PARAM(0), MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t14), CONST(1))))), CONST(10)))
 MOVE(TEMP(t18), CALL(NAME(_L_write), BINOP(PLUS, CONST(48), TEMP(t87))))
 MOVE(TEMP(t88), CALL(NAME(_LPiDigits$equals), PARAM(0), CONST(0), TEMP(t14)))
 CJUMP(EQ, TEMP(t88), CONST(1), L$$21, L$$20)
 LABEL(L$$21)
 MOVE(TEMP(t19), CALL(NAME(_L_write), CONST(46)))
 JUMP(NAME(L$$22), L$$22)
 LABEL(L$$20)
 MOVE(TEMP(t20), CALL(NAME(_L_write), CONST(32)))
 LABEL(L$$22)
 MOVE(TEMP(t14), BINOP(PLUS, TEMP(t14), CONST(1)))
 JUMP(NAME(L$$15), L$$15)
 LABEL(L$$16)
 MOVE(TEMP(t21), CALL(NAME(_L_write), CONST(10)))
 MOVE(TEMP(t22), CALL(NAME(_L_write), CONST(13)))
 MOVE(TEMP(t23), CONST(0))
 return t23
}

_LPiDigits$overflow(2) {
 MOVE(TEMP(t89), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(TEMP(t24), BINOP(MINUS, TEMP(t89), CONST(1)))
 LABEL(L$$23)
 MOVE(TEMP(t25), CONST(0))
 CJUMP(LT, CONST(0), TEMP(t24), L$$26, L$$27)
 LABEL(L$$26)
 MOVE(TEMP(t25), CONST(1))
 LABEL(L$$27)
 CJUMP(EQ, TEMP(t25), CONST(1), L$$25, L$$24)
 LABEL(L$$25)
 LABEL(L$$28)
 MOVE(TEMP(t26), CONST(0))
 MOVE(TEMP(t90), CALL(NAME(_LPiDigits$base), PARAM(0)))
 CJUMP(LT, TEMP(t90), BINOP(PLUS, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t24), CONST(1))))), CONST(1)), L$$31, L$$32)
 LABEL(L$$31)
 MOVE(TEMP(t26), CONST(1))
 LABEL(L$$32)
 CJUMP(EQ, TEMP(t26), CONST(1), L$$30, L$$29)
 LABEL(L$$30)
 MOVE(TEMP(t93), BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t24), CONST(1)))))
 MOVE(TEMP(t92), MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t24), CONST(1))))))
 MOVE(TEMP(t91), CALL(NAME(_LPiDigits$base), PARAM(0)))
 MOVE(MEM(TEMP(t93)), BINOP(MINUS, TEMP(t92), TEMP(t91)))
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, BINOP(MINUS, TEMP(t24), CONST(1)), CONST(1))))), BINOP(PLUS, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, BINOP(MINUS, TEMP(t24), CONST(1)), CONST(1))))), CONST(1)))
 JUMP(NAME(L$$28), L$$28)
 LABEL(L$$29)
 LABEL(L$$33)
 MOVE(TEMP(t27), CONST(0))
 CJUMP(LT, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t24), CONST(1))))), CONST(0), L$$36, L$$37)
 LABEL(L$$36)
 MOVE(TEMP(t27), CONST(1))
 LABEL(L$$37)
 CJUMP(EQ, TEMP(t27), CONST(1), L$$35, L$$34)
 LABEL(L$$35)
 MOVE(TEMP(t96), BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t24), CONST(1)))))
 MOVE(TEMP(t95), MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t24), CONST(1))))))
 MOVE(TEMP(t94), CALL(NAME(_LPiDigits$base), PARAM(0)))
 MOVE(MEM(TEMP(t96)), BINOP(PLUS, TEMP(t95), TEMP(t94)))
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, BINOP(MINUS, TEMP(t24), CONST(1)), CONST(1))))), BINOP(MINUS, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, BINOP(MINUS, TEMP(t24), CONST(1)), CONST(1))))), CONST(1)))
 JUMP(NAME(L$$33), L$$33)
 LABEL(L$$34)
 MOVE(TEMP(t24), BINOP(MINUS, TEMP(t24), CONST(1)))
 JUMP(NAME(L$$23), L$$23)
 LABEL(L$$24)
 MOVE(TEMP(t28), CONST(0))
 return t28
}

_LPiDigits$add(4) {
 MOVE(TEMP(t29), CONST(0))
 LABEL(L$$38)
 MOVE(TEMP(t30), CONST(0))
 MOVE(TEMP(t98), TEMP(t29))
 MOVE(TEMP(t97), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t98), TEMP(t97), L$$41, L$$42)
 LABEL(L$$41)
 MOVE(TEMP(t30), CONST(1))
 LABEL(L$$42)
 CJUMP(EQ, TEMP(t30), CONST(1), L$$40, L$$39)
 LABEL(L$$40)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t29), CONST(1))))), BINOP(PLUS, MEM(BINOP(PLUS, PARAM(2), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t29), CONST(1))))), MEM(BINOP(PLUS, PARAM(3), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t29), CONST(1)))))))
 MOVE(TEMP(t29), BINOP(PLUS, TEMP(t29), CONST(1)))
 JUMP(NAME(L$$38), L$$38)
 LABEL(L$$39)
 MOVE(TEMP(t31), CONST(0))
 return t31
}

_LPiDigits$sub(4) {
 MOVE(TEMP(t32), CONST(0))
 LABEL(L$$43)
 MOVE(TEMP(t33), CONST(0))
 MOVE(TEMP(t100), TEMP(t32))
 MOVE(TEMP(t99), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t100), TEMP(t99), L$$46, L$$47)
 LABEL(L$$46)
 MOVE(TEMP(t33), CONST(1))
 LABEL(L$$47)
 CJUMP(EQ, TEMP(t33), CONST(1), L$$45, L$$44)
 LABEL(L$$45)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t32), CONST(1))))), BINOP(MINUS, MEM(BINOP(PLUS, PARAM(2), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t32), CONST(1))))), MEM(BINOP(PLUS, PARAM(3), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t32), CONST(1)))))))
 MOVE(TEMP(t32), BINOP(PLUS, TEMP(t32), CONST(1)))
 JUMP(NAME(L$$43), L$$43)
 LABEL(L$$44)
 MOVE(TEMP(t34), CONST(0))
 return t34
}

_LPiDigits$neg(3) {
 MOVE(TEMP(t35), CONST(0))
 LABEL(L$$48)
 MOVE(TEMP(t36), CONST(0))
 MOVE(TEMP(t102), TEMP(t35))
 MOVE(TEMP(t101), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t102), TEMP(t101), L$$51, L$$52)
 LABEL(L$$51)
 MOVE(TEMP(t36), CONST(1))
 LABEL(L$$52)
 CJUMP(EQ, TEMP(t36), CONST(1), L$$50, L$$49)
 LABEL(L$$50)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t35), CONST(1))))), BINOP(MINUS, CONST(0), MEM(BINOP(PLUS, PARAM(2), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t35), CONST(1)))))))
 MOVE(TEMP(t35), BINOP(PLUS, TEMP(t35), CONST(1)))
 JUMP(NAME(L$$48), L$$48)
 LABEL(L$$49)
 MOVE(TEMP(t37), CONST(0))
 return t37
}

_LPiDigits$longdiv(4) {
 MOVE(TEMP(t38), CALL(NAME(_LPiDigits$overflow), PARAM(0), PARAM(2)))
 MOVE(TEMP(t39), CONST(0))
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, CONST(0), CONST(1))))), CONST(0))
 LABEL(L$$53)
 MOVE(TEMP(t42), CONST(0))
 MOVE(TEMP(t104), TEMP(t39))
 MOVE(TEMP(t103), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t104), BINOP(MINUS, TEMP(t103), CONST(1)), L$$56, L$$57)
 LABEL(L$$56)
 MOVE(TEMP(t42), CONST(1))
 LABEL(L$$57)
 CJUMP(EQ, TEMP(t42), CONST(1), L$$55, L$$54)
 LABEL(L$$55)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t39), CONST(1))))), BINOP(PLUS, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t39), CONST(1))))), MEM(BINOP(PLUS, PARAM(2), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t39), CONST(1)))))))
 MOVE(TEMP(t40), CALL(NAME(_LPiDigits$div), PARAM(0), MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t39), CONST(1))))), PARAM(3)))
 MOVE(TEMP(t41), BINOP(MINUS, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t39), CONST(1))))), BINOP(MUL, TEMP(t40), PARAM(3))))
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t39), CONST(1))))), TEMP(t40))
 MOVE(TEMP(t107), BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, BINOP(PLUS, TEMP(t39), CONST(1)), CONST(1)))))
 MOVE(TEMP(t106), TEMP(t41))
 MOVE(TEMP(t105), CALL(NAME(_LPiDigits$base), PARAM(0)))
 MOVE(MEM(TEMP(t107)), BINOP(MUL, TEMP(t106), TEMP(t105)))
 MOVE(TEMP(t39), BINOP(PLUS, TEMP(t39), CONST(1)))
 JUMP(NAME(L$$53), L$$53)
 LABEL(L$$54)
 MOVE(TEMP(t38), CALL(NAME(_LPiDigits$overflow), PARAM(0), PARAM(1)))
 MOVE(TEMP(t43), CONST(0))
 return t43
}

_LPiDigits$mult(4) {
 MOVE(TEMP(t44), CALL(NAME(_LPiDigits$overflow), PARAM(0), PARAM(2)))
 MOVE(TEMP(t44), CALL(NAME(_LPiDigits$overflow), PARAM(0), PARAM(3)))
 MOVE(TEMP(t45), CONST(0))
 LABEL(L$$58)
 MOVE(TEMP(t48), CONST(0))
 MOVE(TEMP(t109), TEMP(t45))
 MOVE(TEMP(t108), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t109), TEMP(t108), L$$61, L$$62)
 LABEL(L$$61)
 MOVE(TEMP(t48), CONST(1))
 LABEL(L$$62)
 CJUMP(EQ, TEMP(t48), CONST(1), L$$60, L$$59)
 LABEL(L$$60)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t45), CONST(1))))), CONST(0))
 MOVE(TEMP(t45), BINOP(PLUS, TEMP(t45), CONST(1)))
 JUMP(NAME(L$$58), L$$58)
 LABEL(L$$59)
 MOVE(TEMP(t46), CONST(0))
 LABEL(L$$63)
 MOVE(TEMP(t49), CONST(0))
 MOVE(TEMP(t111), TEMP(t46))
 MOVE(TEMP(t110), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t111), TEMP(t110), L$$66, L$$67)
 LABEL(L$$66)
 MOVE(TEMP(t49), CONST(1))
 LABEL(L$$67)
 CJUMP(EQ, TEMP(t49), CONST(1), L$$65, L$$64)
 LABEL(L$$65)
 MOVE(TEMP(t47), CONST(0))
 LABEL(L$$68)
 MOVE(TEMP(t50), CONST(0))
 MOVE(TEMP(t113), BINOP(PLUS, TEMP(t46), TEMP(t47)))
 MOVE(TEMP(t112), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t113), TEMP(t112), L$$71, L$$72)
 LABEL(L$$71)
 MOVE(TEMP(t50), CONST(1))
 LABEL(L$$72)
 CJUMP(EQ, TEMP(t50), CONST(1), L$$70, L$$69)
 LABEL(L$$70)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, BINOP(PLUS, TEMP(t46), TEMP(t47)), CONST(1))))), BINOP(PLUS, MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, BINOP(PLUS, TEMP(t46), TEMP(t47)), CONST(1))))), BINOP(MUL, MEM(BINOP(PLUS, PARAM(2), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t46), CONST(1))))), MEM(BINOP(PLUS, PARAM(3), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t47), CONST(1))))))))
 MOVE(TEMP(t47), BINOP(PLUS, TEMP(t47), CONST(1)))
 JUMP(NAME(L$$68), L$$68)
 LABEL(L$$69)
 MOVE(TEMP(t46), BINOP(PLUS, TEMP(t46), CONST(1)))
 JUMP(NAME(L$$63), L$$63)
 LABEL(L$$64)
 MOVE(TEMP(t44), CALL(NAME(_LPiDigits$overflow), PARAM(0), PARAM(1)))
 MOVE(TEMP(t51), CONST(0))
 return t51
}

_LPiDigits$mv(3) {
 MOVE(TEMP(t52), CONST(0))
 LABEL(L$$73)
 MOVE(TEMP(t53), CONST(0))
 MOVE(TEMP(t115), TEMP(t52))
 MOVE(TEMP(t114), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t115), TEMP(t114), L$$76, L$$77)
 LABEL(L$$76)
 MOVE(TEMP(t53), CONST(1))
 LABEL(L$$77)
 CJUMP(EQ, TEMP(t53), CONST(1), L$$75, L$$74)
 LABEL(L$$75)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t52), CONST(1))))), MEM(BINOP(PLUS, PARAM(2), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t52), CONST(1))))))
 MOVE(TEMP(t52), BINOP(PLUS, TEMP(t52), CONST(1)))
 JUMP(NAME(L$$73), L$$73)
 LABEL(L$$74)
 MOVE(TEMP(t54), CONST(0))
 return t54
}

_LPiDigits$nullify(2) {
 MOVE(TEMP(t55), CONST(0))
 LABEL(L$$78)
 MOVE(TEMP(t56), CONST(0))
 MOVE(TEMP(t117), TEMP(t55))
 MOVE(TEMP(t116), CALL(NAME(_LPiDigits$places), PARAM(0)))
 CJUMP(LT, TEMP(t117), TEMP(t116), L$$81, L$$82)
 LABEL(L$$81)
 MOVE(TEMP(t56), CONST(1))
 LABEL(L$$82)
 CJUMP(EQ, TEMP(t56), CONST(1), L$$80, L$$79)
 LABEL(L$$80)
 MOVE(MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t55), CONST(1))))), CONST(0))
 MOVE(TEMP(t55), BINOP(PLUS, TEMP(t55), CONST(1)))
 JUMP(NAME(L$$78), L$$78)
 LABEL(L$$79)
 MOVE(TEMP(t57), CONST(0))
 return t57
}

_LPiDigits$iszero(2) {
 MOVE(TEMP(t58), CONST(0))
 MOVE(TEMP(t59), CONST(1))
 LABEL(L$$83)
 CJUMP(EQ, TEMP(t59), CONST(1), L$$86, L$$87)
 LABEL(L$$86)
 MOVE(TEMP(t62), CONST(0))
 MOVE(TEMP(t121), TEMP(t58))
 MOVE(TEMP(t118), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(TEMP(t120), TEMP(t118))
 MOVE(TEMP(t119), CALL(NAME(_LPiDigits$reserve), PARAM(0)))
 CJUMP(LT, TEMP(t121), BINOP(MINUS, TEMP(t120), TEMP(t119)), L$$89, L$$90)
 LABEL(L$$89)
 MOVE(TEMP(t62), CONST(1))
 LABEL(L$$90)
 MOVE(TEMP(t61), TEMP(t62))
 MOVE(TEMP(t60), CONST(1))
 JUMP(NAME(L$$88), L$$88)
 LABEL(L$$87)
 MOVE(TEMP(t61), CONST(0))
 MOVE(TEMP(t60), CONST(0))
 LABEL(L$$88)
 CJUMP(EQ, BINOP(AND, TEMP(t60), TEMP(t61)), CONST(1), L$$85, L$$84)
 LABEL(L$$85)
 MOVE(TEMP(t122), CALL(NAME(_LPiDigits$equals), PARAM(0), MEM(BINOP(PLUS, PARAM(1), BINOP(MUL, CONST(4), BINOP(PLUS, TEMP(t58), CONST(1))))), CONST(0)))
 CJUMP(EQ, BINOP(MINUS, CONST(1), TEMP(t122)), CONST(1), L$$92, L$$91)
 LABEL(L$$92)
 MOVE(TEMP(t59), CONST(0))
 JUMP(NAME(L$$93), L$$93)
 LABEL(L$$91)
 LABEL(L$$93)
 MOVE(TEMP(t58), BINOP(PLUS, TEMP(t58), CONST(1)))
 JUMP(NAME(L$$83), L$$83)
 LABEL(L$$84)
 MOVE(TEMP(t63), TEMP(t59))
 return t63
}

_LPiDigits$sin(5) {
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$overflow), PARAM(0), PARAM(2)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$mv), PARAM(0), PARAM(3), PARAM(2)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$nullify), PARAM(0), PARAM(1)))
 MOVE(TEMP(t65), CONST(1))
 LABEL(L$$94)
 MOVE(TEMP(t123), CALL(NAME(_LPiDigits$iszero), PARAM(0), PARAM(3)))
 CJUMP(EQ, BINOP(MINUS, CONST(1), TEMP(t123)), CONST(1), L$$96, L$$95)
 LABEL(L$$96)
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$add), PARAM(0), PARAM(1), PARAM(1), PARAM(3)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$mult), PARAM(0), PARAM(4), PARAM(3), PARAM(2)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$longdiv), PARAM(0), PARAM(3), PARAM(4), BINOP(PLUS, TEMP(t65), CONST(1))))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$mult), PARAM(0), PARAM(4), PARAM(3), PARAM(2)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$longdiv), PARAM(0), PARAM(3), PARAM(4), BINOP(PLUS, TEMP(t65), CONST(2))))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$sub), PARAM(0), PARAM(1), PARAM(1), PARAM(3)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$mult), PARAM(0), PARAM(4), PARAM(3), PARAM(2)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$longdiv), PARAM(0), PARAM(3), PARAM(4), BINOP(PLUS, TEMP(t65), CONST(3))))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$mult), PARAM(0), PARAM(4), PARAM(3), PARAM(2)))
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$longdiv), PARAM(0), PARAM(3), PARAM(4), BINOP(PLUS, TEMP(t65), CONST(4))))
 MOVE(TEMP(t65), BINOP(PLUS, TEMP(t65), CONST(4)))
 JUMP(NAME(L$$94), L$$94)
 LABEL(L$$95)
 MOVE(TEMP(t64), CALL(NAME(_LPiDigits$overflow), PARAM(0), PARAM(1)))
 MOVE(TEMP(t66), CONST(0))
 return t66
}

_LPiDigits$pi(1) {
 MOVE(TEMP(t124), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(TEMP(t73), CALL(NAME(_L_halloc), BINOP(MUL, BINOP(PLUS, TEMP(t124), CONST(1)), CONST(4))))
 MOVE(TEMP(t126), TEMP(t73))
 MOVE(TEMP(t125), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(MEM(TEMP(t126)), TEMP(t125))
 MOVE(TEMP(t68), TEMP(t73))
 MOVE(TEMP(t127), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(TEMP(t74), CALL(NAME(_L_halloc), BINOP(MUL, BINOP(PLUS, TEMP(t127), CONST(1)), CONST(4))))
 MOVE(TEMP(t129), TEMP(t74))
 MOVE(TEMP(t128), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(MEM(TEMP(t129)), TEMP(t128))
 MOVE(TEMP(t69), TEMP(t74))
 MOVE(TEMP(t130), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(TEMP(t75), CALL(NAME(_L_halloc), BINOP(MUL, BINOP(PLUS, TEMP(t130), CONST(1)), CONST(4))))
 MOVE(TEMP(t132), TEMP(t75))
 MOVE(TEMP(t131), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(MEM(TEMP(t132)), TEMP(t131))
 MOVE(TEMP(t70), TEMP(t75))
 MOVE(TEMP(t133), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(TEMP(t76), CALL(NAME(_L_halloc), BINOP(MUL, BINOP(PLUS, TEMP(t133), CONST(1)), CONST(4))))
 MOVE(TEMP(t135), TEMP(t76))
 MOVE(TEMP(t134), CALL(NAME(_LPiDigits$places), PARAM(0)))
 MOVE(MEM(TEMP(t135)), TEMP(t134))
 MOVE(TEMP(t71), TEMP(t76))
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$nullify), PARAM(0), TEMP(t68)))
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$nullify), PARAM(0), TEMP(t69)))
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$nullify), PARAM(0), TEMP(t70)))
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$nullify), PARAM(0), TEMP(t71)))
 MOVE(MEM(BINOP(PLUS, TEMP(t71), BINOP(MUL, CONST(4), BINOP(PLUS, CONST(0), CONST(1))))), CONST(1))
 MOVE(TEMP(t72), CONST(0))
 LABEL(L$$97)
 MOVE(TEMP(t77), CONST(0))
 CJUMP(LT, TEMP(t72), CONST(10), L$$100, L$$101)
 LABEL(L$$100)
 MOVE(TEMP(t77), CONST(1))
 LABEL(L$$101)
 CJUMP(EQ, TEMP(t77), CONST(1), L$$99, L$$98)
 LABEL(L$$99)
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$overflow), PARAM(0), TEMP(t71)))
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$shownum), PARAM(0), TEMP(t71)))
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$sin), PARAM(0), TEMP(t68), TEMP(t71), TEMP(t69), TEMP(t70)))
 MOVE(TEMP(t67), CALL(NAME(_LPiDigits$add), PARAM(0), TEMP(t71), TEMP(t71), TEMP(t68)))
 MOVE(TEMP(t72), BINOP(PLUS, TEMP(t72), CONST(1)))
 JUMP(NAME(L$$97), L$$97)
 LABEL(L$$98)
 MOVE(TEMP(t78), CONST(10))
 return t78
}

