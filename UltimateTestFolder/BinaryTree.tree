Lmain(2) {
 MOVE(TEMP(t69), CALL(NAME(L_halloc), CONST(0)))
 MOVE(TEMP(t70), CALL(NAME(LBT$Start), TEMP(t69)))
 MOVE(TEMP(t1), CALL(NAME(L_println_int), TEMP(t70)))
 MOVE(TEMP(t0), CONST(0))
 return t0
}

LBT$Start(1) {
 MOVE(TEMP(t2), CALL(NAME(L_halloc), CONST(24)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Init), TEMP(t2), CONST(16)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Print), TEMP(t2)))
 MOVE(TEMP(t5), CALL(NAME(L_println_int), CONST(100000000)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Insert), TEMP(t2), CONST(8)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Print), TEMP(t2)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Insert), TEMP(t2), CONST(24)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Insert), TEMP(t2), CONST(4)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Insert), TEMP(t2), CONST(12)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Insert), TEMP(t2), CONST(20)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Insert), TEMP(t2), CONST(28)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Insert), TEMP(t2), CONST(14)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Print), TEMP(t2)))
 MOVE(TEMP(t71), CALL(NAME(LTree$Search), TEMP(t2), CONST(24)))
 MOVE(TEMP(t6), CALL(NAME(L_println_int), TEMP(t71)))
 MOVE(TEMP(t72), CALL(NAME(LTree$Search), TEMP(t2), CONST(12)))
 MOVE(TEMP(t7), CALL(NAME(L_println_int), TEMP(t72)))
 MOVE(TEMP(t73), CALL(NAME(LTree$Search), TEMP(t2), CONST(16)))
 MOVE(TEMP(t8), CALL(NAME(L_println_int), TEMP(t73)))
 MOVE(TEMP(t74), CALL(NAME(LTree$Search), TEMP(t2), CONST(50)))
 MOVE(TEMP(t9), CALL(NAME(L_println_int), TEMP(t74)))
 MOVE(TEMP(t75), CALL(NAME(LTree$Search), TEMP(t2), CONST(12)))
 MOVE(TEMP(t10), CALL(NAME(L_println_int), TEMP(t75)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Delete), TEMP(t2), CONST(12)))
 MOVE(TEMP(t3), CALL(NAME(LTree$Print), TEMP(t2)))
 MOVE(TEMP(t76), CALL(NAME(LTree$Search), TEMP(t2), CONST(12)))
 MOVE(TEMP(t11), CALL(NAME(L_println_int), TEMP(t76)))
 MOVE(TEMP(t12), CONST(0))
 return t12
}

LTree$Init(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(2), CONST(4)))), PARAM(1))
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(3), CONST(4)))), CONST(0))
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(4), CONST(4)))), CONST(0))
 MOVE(TEMP(t13), CONST(1))
 return t13
}

LTree$SetRight(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(1), CONST(4)))), PARAM(1))
 MOVE(TEMP(t14), CONST(1))
 return t14
}

LTree$SetLeft(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))), PARAM(1))
 MOVE(TEMP(t15), CONST(1))
 return t15
}

LTree$GetRight(1) {
 MOVE(TEMP(t16), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(1), CONST(4)))))
 return t16
}

LTree$GetLeft(1) {
 MOVE(TEMP(t17), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))))
 return t17
}

LTree$GetKey(1) {
 MOVE(TEMP(t18), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(2), CONST(4)))))
 return t18
}

LTree$SetKey(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(2), CONST(4)))), PARAM(1))
 MOVE(TEMP(t19), CONST(1))
 return t19
}

LTree$GetHas_Right(1) {
 MOVE(TEMP(t20), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(4), CONST(4)))))
 return t20
}

LTree$GetHas_Left(1) {
 MOVE(TEMP(t21), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(3), CONST(4)))))
 return t21
}

LTree$SetHas_Left(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(3), CONST(4)))), PARAM(1))
 MOVE(TEMP(t22), CONST(1))
 return t22
}

LTree$SetHas_Right(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(4), CONST(4)))), PARAM(1))
 MOVE(TEMP(t23), CONST(1))
 return t23
}

LTree$Compare(3) {
 MOVE(TEMP(t24), CONST(0))
 MOVE(TEMP(t25), BINOP(PLUS, PARAM(2), CONST(1)))
 MOVE(TEMP(t26), CONST(0))
 CJUMP(LT, PARAM(1), PARAM(2), L$$3, L$$4)
 LABEL(L$$3)
 MOVE(TEMP(t26), CONST(1))
 LABEL(L$$4)
 CJUMP(EQ, TEMP(t26), CONST(1), L$$1, L$$0)
 LABEL(L$$1)
 MOVE(TEMP(t24), CONST(0))
 JUMP(NAME(L$$2), L$$2)
 LABEL(L$$0)
 MOVE(TEMP(t27), CONST(0))
 CJUMP(LT, PARAM(1), TEMP(t25), L$$8, L$$9)
 LABEL(L$$8)
 MOVE(TEMP(t27), CONST(1))
 LABEL(L$$9)
 CJUMP(EQ, BINOP(MINUS, CONST(1), TEMP(t27)), CONST(1), L$$6, L$$5)
 LABEL(L$$6)
 MOVE(TEMP(t24), CONST(0))
 JUMP(NAME(L$$7), L$$7)
 LABEL(L$$5)
 MOVE(TEMP(t24), CONST(1))
 LABEL(L$$7)
 LABEL(L$$2)
 MOVE(TEMP(t28), TEMP(t24))
 return t28
}

LTree$Insert(2) {
 MOVE(TEMP(t29), CALL(NAME(L_halloc), CONST(24)))
 MOVE(TEMP(t30), CALL(NAME(LTree$Init), TEMP(t29), PARAM(1)))
 MOVE(TEMP(t33), PARAM(0))
 MOVE(TEMP(t31), CONST(1))
 LABEL(L$$10)
 CJUMP(EQ, TEMP(t31), CONST(1), L$$12, L$$11)
 LABEL(L$$12)
 MOVE(TEMP(t32), CALL(NAME(LTree$GetKey), TEMP(t33)))
 MOVE(TEMP(t34), CONST(0))
 CJUMP(LT, PARAM(1), TEMP(t32), L$$16, L$$17)
 LABEL(L$$16)
 MOVE(TEMP(t34), CONST(1))
 LABEL(L$$17)
 CJUMP(EQ, TEMP(t34), CONST(1), L$$14, L$$13)
 LABEL(L$$14)
 MOVE(TEMP(t77), CALL(NAME(LTree$GetHas_Left), TEMP(t33)))
 CJUMP(EQ, TEMP(t77), CONST(1), L$$19, L$$18)
 LABEL(L$$19)
 MOVE(TEMP(t33), CALL(NAME(LTree$GetLeft), TEMP(t33)))
 JUMP(NAME(L$$20), L$$20)
 LABEL(L$$18)
 MOVE(TEMP(t31), CONST(0))
 MOVE(TEMP(t30), CALL(NAME(LTree$SetHas_Left), TEMP(t33), CONST(1)))
 MOVE(TEMP(t30), CALL(NAME(LTree$SetLeft), TEMP(t33), TEMP(t29)))
 LABEL(L$$20)
 JUMP(NAME(L$$15), L$$15)
 LABEL(L$$13)
 MOVE(TEMP(t78), CALL(NAME(LTree$GetHas_Right), TEMP(t33)))
 CJUMP(EQ, TEMP(t78), CONST(1), L$$22, L$$21)
 LABEL(L$$22)
 MOVE(TEMP(t33), CALL(NAME(LTree$GetRight), TEMP(t33)))
 JUMP(NAME(L$$23), L$$23)
 LABEL(L$$21)
 MOVE(TEMP(t31), CONST(0))
 MOVE(TEMP(t30), CALL(NAME(LTree$SetHas_Right), TEMP(t33), CONST(1)))
 MOVE(TEMP(t30), CALL(NAME(LTree$SetRight), TEMP(t33), TEMP(t29)))
 LABEL(L$$23)
 LABEL(L$$15)
 JUMP(NAME(L$$10), L$$10)
 LABEL(L$$11)
 MOVE(TEMP(t35), CONST(1))
 return t35
}

LTree$Delete(2) {
 MOVE(TEMP(t36), PARAM(0))
 MOVE(TEMP(t37), PARAM(0))
 MOVE(TEMP(t38), CONST(1))
 MOVE(TEMP(t39), CONST(0))
 MOVE(TEMP(t40), CONST(1))
 LABEL(L$$24)
 CJUMP(EQ, TEMP(t38), CONST(1), L$$26, L$$25)
 LABEL(L$$26)
 MOVE(TEMP(t41), CALL(NAME(LTree$GetKey), TEMP(t36)))
 MOVE(TEMP(t43), CONST(0))
 CJUMP(LT, PARAM(1), TEMP(t41), L$$30, L$$31)
 LABEL(L$$30)
 MOVE(TEMP(t43), CONST(1))
 LABEL(L$$31)
 CJUMP(EQ, TEMP(t43), CONST(1), L$$28, L$$27)
 LABEL(L$$28)
 MOVE(TEMP(t79), CALL(NAME(LTree$GetHas_Left), TEMP(t36)))
 CJUMP(EQ, TEMP(t79), CONST(1), L$$33, L$$32)
 LABEL(L$$33)
 MOVE(TEMP(t37), TEMP(t36))
 MOVE(TEMP(t36), CALL(NAME(LTree$GetLeft), TEMP(t36)))
 JUMP(NAME(L$$34), L$$34)
 LABEL(L$$32)
 MOVE(TEMP(t38), CONST(0))
 LABEL(L$$34)
 JUMP(NAME(L$$29), L$$29)
 LABEL(L$$27)
 MOVE(TEMP(t44), CONST(0))
 CJUMP(LT, TEMP(t41), PARAM(1), L$$38, L$$39)
 LABEL(L$$38)
 MOVE(TEMP(t44), CONST(1))
 LABEL(L$$39)
 CJUMP(EQ, TEMP(t44), CONST(1), L$$36, L$$35)
 LABEL(L$$36)
 MOVE(TEMP(t80), CALL(NAME(LTree$GetHas_Right), TEMP(t36)))
 CJUMP(EQ, TEMP(t80), CONST(1), L$$41, L$$40)
 LABEL(L$$41)
 MOVE(TEMP(t37), TEMP(t36))
 MOVE(TEMP(t36), CALL(NAME(LTree$GetRight), TEMP(t36)))
 JUMP(NAME(L$$42), L$$42)
 LABEL(L$$40)
 MOVE(TEMP(t38), CONST(0))
 LABEL(L$$42)
 JUMP(NAME(L$$37), L$$37)
 LABEL(L$$35)
 CJUMP(EQ, TEMP(t40), CONST(1), L$$44, L$$43)
 LABEL(L$$44)
 MOVE(TEMP(t81), CALL(NAME(LTree$GetHas_Right), TEMP(t36)))
 CJUMP(EQ, BINOP(MINUS, CONST(1), TEMP(t81)), CONST(1), L$$49, L$$50)
 LABEL(L$$49)
 MOVE(TEMP(t82), CALL(NAME(LTree$GetHas_Left), TEMP(t36)))
 MOVE(TEMP(t46), BINOP(MINUS, CONST(1), TEMP(t82)))
 MOVE(TEMP(t45), CONST(1))
 JUMP(NAME(L$$51), L$$51)
 LABEL(L$$50)
 MOVE(TEMP(t46), CONST(0))
 MOVE(TEMP(t45), CONST(0))
 LABEL(L$$51)
 CJUMP(EQ, BINOP(AND, TEMP(t45), TEMP(t46)), CONST(1), L$$47, L$$46)
 LABEL(L$$47)
 MOVE(TEMP(t42), CONST(1))
 JUMP(NAME(L$$48), L$$48)
 LABEL(L$$46)
 MOVE(TEMP(t42), CALL(NAME(LTree$Remove), PARAM(0), TEMP(t37), TEMP(t36)))
 LABEL(L$$48)
 JUMP(NAME(L$$45), L$$45)
 LABEL(L$$43)
 MOVE(TEMP(t42), CALL(NAME(LTree$Remove), PARAM(0), TEMP(t37), TEMP(t36)))
 LABEL(L$$45)
 MOVE(TEMP(t39), CONST(1))
 MOVE(TEMP(t38), CONST(0))
 LABEL(L$$37)
 LABEL(L$$29)
 MOVE(TEMP(t40), CONST(0))
 JUMP(NAME(L$$24), L$$24)
 LABEL(L$$25)
 MOVE(TEMP(t47), TEMP(t39))
 return t47
}

LTree$Remove(3) {
 MOVE(TEMP(t83), CALL(NAME(LTree$GetHas_Left), PARAM(2)))
 CJUMP(EQ, TEMP(t83), CONST(1), L$$53, L$$52)
 LABEL(L$$53)
 MOVE(TEMP(t48), CALL(NAME(LTree$RemoveLeft), PARAM(0), PARAM(1), PARAM(2)))
 JUMP(NAME(L$$54), L$$54)
 LABEL(L$$52)
 MOVE(TEMP(t84), CALL(NAME(LTree$GetHas_Right), PARAM(2)))
 CJUMP(EQ, TEMP(t84), CONST(1), L$$56, L$$55)
 LABEL(L$$56)
 MOVE(TEMP(t48), CALL(NAME(LTree$RemoveRight), PARAM(0), PARAM(1), PARAM(2)))
 JUMP(NAME(L$$57), L$$57)
 LABEL(L$$55)
 MOVE(TEMP(t49), CALL(NAME(LTree$GetKey), PARAM(2)))
 MOVE(TEMP(t85), CALL(NAME(LTree$GetLeft), PARAM(1)))
 MOVE(TEMP(t50), CALL(NAME(LTree$GetKey), TEMP(t85)))
 MOVE(TEMP(t86), CALL(NAME(LTree$Compare), PARAM(0), TEMP(t49), TEMP(t50)))
 CJUMP(EQ, TEMP(t86), CONST(1), L$$59, L$$58)
 LABEL(L$$59)
 MOVE(TEMP(t48), CALL(NAME(LTree$SetLeft), PARAM(1), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(5), CONST(4))))))
 MOVE(TEMP(t48), CALL(NAME(LTree$SetHas_Left), PARAM(1), CONST(0)))
 JUMP(NAME(L$$60), L$$60)
 LABEL(L$$58)
 MOVE(TEMP(t48), CALL(NAME(LTree$SetRight), PARAM(1), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(5), CONST(4))))))
 MOVE(TEMP(t48), CALL(NAME(LTree$SetHas_Right), PARAM(1), CONST(0)))
 LABEL(L$$60)
 LABEL(L$$57)
 LABEL(L$$54)
 MOVE(TEMP(t51), CONST(1))
 return t51
}

LTree$RemoveRight(3) {
 LABEL(L$$61)
 MOVE(TEMP(t87), CALL(NAME(LTree$GetHas_Right), PARAM(2)))
 CJUMP(EQ, TEMP(t87), CONST(1), L$$63, L$$62)
 LABEL(L$$63)
 MOVE(TEMP(t90), PARAM(2))
 MOVE(TEMP(t88), CALL(NAME(LTree$GetRight), PARAM(2)))
 MOVE(TEMP(t89), CALL(NAME(LTree$GetKey), TEMP(t88)))
 MOVE(TEMP(t52), CALL(NAME(LTree$SetKey), TEMP(t90), TEMP(t89)))
 MOVE(PARAM(1), PARAM(2))
 MOVE(PARAM(2), CALL(NAME(LTree$GetRight), PARAM(2)))
 JUMP(NAME(L$$61), L$$61)
 LABEL(L$$62)
 MOVE(TEMP(t52), CALL(NAME(LTree$SetRight), PARAM(1), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(5), CONST(4))))))
 MOVE(TEMP(t52), CALL(NAME(LTree$SetHas_Right), PARAM(1), CONST(0)))
 MOVE(TEMP(t53), CONST(1))
 return t53
}

LTree$RemoveLeft(3) {
 LABEL(L$$64)
 MOVE(TEMP(t91), CALL(NAME(LTree$GetHas_Left), PARAM(2)))
 CJUMP(EQ, TEMP(t91), CONST(1), L$$66, L$$65)
 LABEL(L$$66)
 MOVE(TEMP(t94), PARAM(2))
 MOVE(TEMP(t92), CALL(NAME(LTree$GetLeft), PARAM(2)))
 MOVE(TEMP(t93), CALL(NAME(LTree$GetKey), TEMP(t92)))
 MOVE(TEMP(t54), CALL(NAME(LTree$SetKey), TEMP(t94), TEMP(t93)))
 MOVE(PARAM(1), PARAM(2))
 MOVE(PARAM(2), CALL(NAME(LTree$GetLeft), PARAM(2)))
 JUMP(NAME(L$$64), L$$64)
 LABEL(L$$65)
 MOVE(TEMP(t54), CALL(NAME(LTree$SetLeft), PARAM(1), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(5), CONST(4))))))
 MOVE(TEMP(t54), CALL(NAME(LTree$SetHas_Left), PARAM(1), CONST(0)))
 MOVE(TEMP(t55), CONST(1))
 return t55
}

LTree$Search(2) {
 MOVE(TEMP(t58), PARAM(0))
 MOVE(TEMP(t56), CONST(1))
 MOVE(TEMP(t57), CONST(0))
 LABEL(L$$67)
 CJUMP(EQ, TEMP(t56), CONST(1), L$$69, L$$68)
 LABEL(L$$69)
 MOVE(TEMP(t59), CALL(NAME(LTree$GetKey), TEMP(t58)))
 MOVE(TEMP(t60), CONST(0))
 CJUMP(LT, PARAM(1), TEMP(t59), L$$73, L$$74)
 LABEL(L$$73)
 MOVE(TEMP(t60), CONST(1))
 LABEL(L$$74)
 CJUMP(EQ, TEMP(t60), CONST(1), L$$71, L$$70)
 LABEL(L$$71)
 MOVE(TEMP(t95), CALL(NAME(LTree$GetHas_Left), TEMP(t58)))
 CJUMP(EQ, TEMP(t95), CONST(1), L$$76, L$$75)
 LABEL(L$$76)
 MOVE(TEMP(t58), CALL(NAME(LTree$GetLeft), TEMP(t58)))
 JUMP(NAME(L$$77), L$$77)
 LABEL(L$$75)
 MOVE(TEMP(t56), CONST(0))
 LABEL(L$$77)
 JUMP(NAME(L$$72), L$$72)
 LABEL(L$$70)
 MOVE(TEMP(t61), CONST(0))
 CJUMP(LT, TEMP(t59), PARAM(1), L$$81, L$$82)
 LABEL(L$$81)
 MOVE(TEMP(t61), CONST(1))
 LABEL(L$$82)
 CJUMP(EQ, TEMP(t61), CONST(1), L$$79, L$$78)
 LABEL(L$$79)
 MOVE(TEMP(t96), CALL(NAME(LTree$GetHas_Right), TEMP(t58)))
 CJUMP(EQ, TEMP(t96), CONST(1), L$$84, L$$83)
 LABEL(L$$84)
 MOVE(TEMP(t58), CALL(NAME(LTree$GetRight), TEMP(t58)))
 JUMP(NAME(L$$85), L$$85)
 LABEL(L$$83)
 MOVE(TEMP(t56), CONST(0))
 LABEL(L$$85)
 JUMP(NAME(L$$80), L$$80)
 LABEL(L$$78)
 MOVE(TEMP(t57), CONST(1))
 MOVE(TEMP(t56), CONST(0))
 LABEL(L$$80)
 LABEL(L$$72)
 JUMP(NAME(L$$67), L$$67)
 LABEL(L$$68)
 MOVE(TEMP(t62), TEMP(t57))
 return t62
}

LTree$Print(1) {
 MOVE(TEMP(t63), PARAM(0))
 MOVE(TEMP(t64), CALL(NAME(LTree$RecPrint), PARAM(0), TEMP(t63)))
 MOVE(TEMP(t65), CONST(1))
 return t65
}

LTree$RecPrint(2) {
 MOVE(TEMP(t97), CALL(NAME(LTree$GetHas_Left), PARAM(1)))
 CJUMP(EQ, TEMP(t97), CONST(1), L$$87, L$$86)
 LABEL(L$$87)
 MOVE(TEMP(t99), PARAM(0))
 MOVE(TEMP(t98), CALL(NAME(LTree$GetLeft), PARAM(1)))
 MOVE(TEMP(t66), CALL(NAME(LTree$RecPrint), TEMP(t99), TEMP(t98)))
 JUMP(NAME(L$$88), L$$88)
 LABEL(L$$86)
 MOVE(TEMP(t66), CONST(1))
 LABEL(L$$88)
 MOVE(TEMP(t100), CALL(NAME(LTree$GetKey), PARAM(1)))
 MOVE(TEMP(t67), CALL(NAME(L_println_int), TEMP(t100)))
 MOVE(TEMP(t101), CALL(NAME(LTree$GetHas_Right), PARAM(1)))
 CJUMP(EQ, TEMP(t101), CONST(1), L$$90, L$$89)
 LABEL(L$$90)
 MOVE(TEMP(t103), PARAM(0))
 MOVE(TEMP(t102), CALL(NAME(LTree$GetRight), PARAM(1)))
 MOVE(TEMP(t66), CALL(NAME(LTree$RecPrint), TEMP(t103), TEMP(t102)))
 JUMP(NAME(L$$91), L$$91)
 LABEL(L$$89)
 MOVE(TEMP(t66), CONST(1))
 LABEL(L$$91)
 MOVE(TEMP(t68), CONST(1))
 return t68
}

