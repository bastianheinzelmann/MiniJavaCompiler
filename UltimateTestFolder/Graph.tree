_Lmain(2) {
 MOVE(TEMP(t53), CALL(NAME(_L_halloc), CONST(0)))
 MOVE(TEMP(t54), CALL(NAME(_LTest$test), TEMP(t53)))
 MOVE(TEMP(t1), CALL(NAME(_L_println_int), TEMP(t54)))
 MOVE(TEMP(t0), CONST(0))
 return t0
}

_LLabel$init(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))), PARAM(1))
 MOVE(TEMP(t2), CONST(0))
 return t2
}

_LLabel$label(1) {
 MOVE(TEMP(t3), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))))
 return t3
}

_LLabel$eq(2) {
 MOVE(TEMP(t4), CALL(NAME(_LLabel$label), PARAM(1)))
 MOVE(TEMP(t8), CONST(0))
 CJUMP(LT, MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))), BINOP(PLUS, TEMP(t4), CONST(1)), L$$3, L$$4)
 LABEL(L$$3)
 MOVE(TEMP(t8), CONST(1))
 LABEL(L$$4)
 CJUMP(EQ, TEMP(t8), CONST(1), L$$0, L$$1)
 LABEL(L$$0)
 MOVE(TEMP(t9), CONST(0))
 CJUMP(LT, TEMP(t4), BINOP(PLUS, MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))), CONST(1)), L$$5, L$$6)
 LABEL(L$$5)
 MOVE(TEMP(t9), CONST(1))
 LABEL(L$$6)
 MOVE(TEMP(t7), TEMP(t9))
 MOVE(TEMP(t6), CONST(1))
 JUMP(NAME(L$$2), L$$2)
 LABEL(L$$1)
 MOVE(TEMP(t7), CONST(0))
 MOVE(TEMP(t6), CONST(0))
 LABEL(L$$2)
 MOVE(TEMP(t5), BINOP(AND, TEMP(t6), TEMP(t7)))
 return t5
}

_LLabel$print(1) {
 MOVE(TEMP(t10), CALL(NAME(_L_println_int), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4))))))
 MOVE(TEMP(t11), CONST(0))
 return t11
}

_LNode$init(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(1), CONST(4)))), CONST(0))
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))), PARAM(1))
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(2), CONST(4)))), PARAM(0))
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(3), CONST(4)))), PARAM(0))
 MOVE(TEMP(t12), CONST(0))
 return t12
}

_LNode$label(1) {
 MOVE(TEMP(t13), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))))
 return t13
}

_LNode$setLeft(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(2), CONST(4)))), PARAM(1))
 MOVE(TEMP(t14), CONST(0))
 return t14
}

_LNode$setRight(2) {
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(3), CONST(4)))), PARAM(1))
 MOVE(TEMP(t15), CONST(0))
 return t15
}

_LNode$print(1) {
 MOVE(TEMP(t16), CALL(NAME(_LLabel$print), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4))))))
 MOVE(TEMP(t17), CONST(0))
 return t17
}

_LNode$beq(3) {
 CJUMP(EQ, PARAM(1), CONST(1), L$$10, L$$11)
 LABEL(L$$10)
 MOVE(TEMP(t22), PARAM(2))
 MOVE(TEMP(t21), CONST(1))
 JUMP(NAME(L$$12), L$$12)
 LABEL(L$$11)
 MOVE(TEMP(t22), CONST(0))
 MOVE(TEMP(t21), CONST(0))
 LABEL(L$$12)
 CJUMP(EQ, BINOP(MINUS, CONST(1), BINOP(AND, TEMP(t21), TEMP(t22))), CONST(1), L$$7, L$$8)
 LABEL(L$$7)
 CJUMP(EQ, BINOP(MINUS, CONST(1), PARAM(1)), CONST(1), L$$13, L$$14)
 LABEL(L$$13)
 MOVE(TEMP(t24), BINOP(MINUS, CONST(1), PARAM(2)))
 MOVE(TEMP(t23), CONST(1))
 JUMP(NAME(L$$15), L$$15)
 LABEL(L$$14)
 MOVE(TEMP(t24), CONST(0))
 MOVE(TEMP(t23), CONST(0))
 LABEL(L$$15)
 MOVE(TEMP(t20), BINOP(MINUS, CONST(1), BINOP(AND, TEMP(t23), TEMP(t24))))
 MOVE(TEMP(t19), CONST(1))
 JUMP(NAME(L$$9), L$$9)
 LABEL(L$$8)
 MOVE(TEMP(t20), CONST(0))
 MOVE(TEMP(t19), CONST(0))
 LABEL(L$$9)
 MOVE(TEMP(t18), BINOP(MINUS, CONST(1), BINOP(AND, TEMP(t19), TEMP(t20))))
 return t18
}

_LNode$dfs(3) {
 MOVE(TEMP(t55), CALL(NAME(_LNode$beq), PARAM(0), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(1), CONST(4)))), PARAM(1)))
 CJUMP(EQ, TEMP(t55), CONST(1), L$$17, L$$16)
 LABEL(L$$17)
 MOVE(TEMP(t25), CONST(0))
 JUMP(NAME(L$$18), L$$18)
 LABEL(L$$16)
 MOVE(TEMP(t56), CALL(NAME(_LLabel$eq), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(0), CONST(4)))), PARAM(2)))
 CJUMP(EQ, TEMP(t56), CONST(1), L$$20, L$$19)
 LABEL(L$$20)
 MOVE(TEMP(t25), CONST(1))
 JUMP(NAME(L$$21), L$$21)
 LABEL(L$$19)
 MOVE(MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(1), CONST(4)))), PARAM(1))
 MOVE(TEMP(t57), CALL(NAME(_LNode$dfs), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(2), CONST(4)))), PARAM(1), PARAM(2)))
 CJUMP(EQ, TEMP(t57), CONST(1), L$$23, L$$22)
 LABEL(L$$23)
 MOVE(TEMP(t25), CONST(1))
 JUMP(NAME(L$$24), L$$24)
 LABEL(L$$22)
 MOVE(TEMP(t58), CALL(NAME(_LNode$dfs), MEM(BINOP(PLUS, PARAM(0), BINOP(MUL, CONST(3), CONST(4)))), PARAM(1), PARAM(2)))
 CJUMP(EQ, TEMP(t58), CONST(1), L$$26, L$$25)
 LABEL(L$$26)
 MOVE(TEMP(t25), CONST(1))
 JUMP(NAME(L$$27), L$$27)
 LABEL(L$$25)
 MOVE(TEMP(t25), CONST(0))
 LABEL(L$$27)
 LABEL(L$$24)
 LABEL(L$$21)
 LABEL(L$$18)
 MOVE(TEMP(t26), TEMP(t25))
 return t26
}

_LTest$newLabel(2) {
 MOVE(TEMP(t28), CALL(NAME(_L_halloc), CONST(4)))
 MOVE(TEMP(t27), CALL(NAME(_LLabel$init), TEMP(t28), PARAM(1)))
 MOVE(TEMP(t29), TEMP(t28))
 return t29
}

_LTest$newNode(2) {
 MOVE(TEMP(t31), CALL(NAME(_L_halloc), CONST(16)))
 MOVE(TEMP(t30), CALL(NAME(_LNode$init), TEMP(t31), PARAM(1)))
 MOVE(TEMP(t32), TEMP(t31))
 return t32
}

_LTest$findPath(3) {
 MOVE(TEMP(t33), CALL(NAME(_LNode$print), PARAM(1)))
 MOVE(TEMP(t33), CALL(NAME(_LNode$print), PARAM(2)))
 MOVE(TEMP(t60), PARAM(1))
 MOVE(TEMP(t59), CALL(NAME(_LNode$label), PARAM(2)))
 MOVE(TEMP(t34), CALL(NAME(_LNode$dfs), TEMP(t60), CONST(1), TEMP(t59)))
 MOVE(TEMP(t62), PARAM(1))
 MOVE(TEMP(t61), CALL(NAME(_LNode$label), PARAM(2)))
 MOVE(TEMP(t35), CALL(NAME(_LNode$dfs), TEMP(t62), CONST(0), TEMP(t61)))
 CJUMP(EQ, TEMP(t34), CONST(1), L$$29, L$$28)
 LABEL(L$$29)
 MOVE(TEMP(t36), CALL(NAME(_L_println_int), CONST(999)))
 JUMP(NAME(L$$30), L$$30)
 LABEL(L$$28)
 MOVE(TEMP(t37), CALL(NAME(_L_println_int), BINOP(MINUS, CONST(0), CONST(999))))
 LABEL(L$$30)
 MOVE(TEMP(t38), CONST(0))
 return t38
}

_LTest$test(1) {
 MOVE(TEMP(t42), CALL(NAME(_LTest$newLabel), PARAM(0), CONST(1)))
 MOVE(TEMP(t43), CALL(NAME(_LTest$newNode), PARAM(0), TEMP(t42)))
 MOVE(TEMP(t44), CALL(NAME(_LTest$newLabel), PARAM(0), CONST(2)))
 MOVE(TEMP(t45), CALL(NAME(_LTest$newNode), PARAM(0), TEMP(t44)))
 MOVE(TEMP(t46), CALL(NAME(_LTest$newLabel), PARAM(0), CONST(3)))
 MOVE(TEMP(t47), CALL(NAME(_LTest$newNode), PARAM(0), TEMP(t46)))
 MOVE(TEMP(t48), CALL(NAME(_LTest$newLabel), PARAM(0), CONST(4)))
 MOVE(TEMP(t49), CALL(NAME(_LTest$newNode), PARAM(0), TEMP(t48)))
 MOVE(TEMP(t50), CALL(NAME(_LTest$newLabel), PARAM(0), CONST(5)))
 MOVE(TEMP(t51), CALL(NAME(_LTest$newNode), PARAM(0), TEMP(t50)))
 MOVE(TEMP(t39), CALL(NAME(_LNode$setLeft), TEMP(t43), TEMP(t45)))
 MOVE(TEMP(t39), CALL(NAME(_LNode$setRight), TEMP(t43), TEMP(t49)))
 MOVE(TEMP(t39), CALL(NAME(_LNode$setLeft), TEMP(t45), TEMP(t47)))
 MOVE(TEMP(t39), CALL(NAME(_LNode$setLeft), TEMP(t47), TEMP(t43)))
 MOVE(TEMP(t39), CALL(NAME(_LNode$setRight), TEMP(t47), TEMP(t49)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t43), TEMP(t49)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t49), TEMP(t43)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t47), TEMP(t45)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t49), TEMP(t43)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t47), TEMP(t45)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t49), TEMP(t47)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t51), TEMP(t51)))
 MOVE(TEMP(t39), CALL(NAME(_LTest$findPath), PARAM(0), TEMP(t51), TEMP(t49)))
 MOVE(TEMP(t52), CONST(0))
 return t52
}

